{"remainingRequest":"C:\\Users\\Prox\\OneDrive\\Desktop\\project\\currency\\CurrencyExchange\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Prox\\OneDrive\\Desktop\\project\\currency\\CurrencyExchange\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Prox\\OneDrive\\Desktop\\project\\currency\\CurrencyExchange\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Prox\\OneDrive\\Desktop\\project\\currency\\CurrencyExchange\\src\\components\\Converter.vue?vue&type=template&id=676cb1a0&scoped=true&","dependencies":[{"path":"C:\\Users\\Prox\\OneDrive\\Desktop\\project\\currency\\CurrencyExchange\\src\\components\\Converter.vue","mtime":1603303215769},{"path":"C:\\Users\\Prox\\OneDrive\\Desktop\\project\\currency\\CurrencyExchange\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Prox\\OneDrive\\Desktop\\project\\currency\\CurrencyExchange\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Prox\\OneDrive\\Desktop\\project\\currency\\CurrencyExchange\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Prox\\OneDrive\\Desktop\\project\\currency\\CurrencyExchange\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udmVydGVyIiB9LCBbCiAgICBfYygKICAgICAgImRpdiIsCiAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb252ZXJ0ZXItcm93IHJhdGVzLWxpc3QiIH0sCiAgICAgIF92bS5fbChfdm0uY3VyclJhdGVzLCBmdW5jdGlvbihjdXJyKSB7CiAgICAgICAgcmV0dXJuIF9jKCJkaXYiLCB7IGtleTogY3Vyciwgc3RhdGljQ2xhc3M6ICJyYXRlcy1saXN0LWl0ZW0gYm9yZGVyIiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJyYXRlcy1saXN0LWl0ZW0tdG9wIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX3ZtLl92KCIgIiArIF92bS5fcyhjdXJyKSArICIgIiksCiAgICAgICAgICAgICAgX2MoImNvdW50cnktZmxhZyIsIHsKICAgICAgICAgICAgICAgIGF0dHJzOiB7IGNvdW50cnk6IF92bS5zbGljZUVuZChjdXJyKSwgc2l6ZTogIm5vcm1hbCIgfQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJhdGVzLWxpc3QtaXRlbS1ib3QiIH0sIFsKICAgICAgICAgICAgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2V0S2V5c1RvT2JqZWN0KGN1cnIpKSArICIgIikKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgfSksCiAgICAgIDAKICAgICksCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnZlcnRlci1yb3ciIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb252ZXJ0ZXItaXRlbSIgfSwgWwogICAgICAgIF9jKAogICAgICAgICAgInNlbGVjdCIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgdmFsdWU6IF92bS5maXJzdEN1cnIsCiAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZmlyc3RDdXJyIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjdXJyLWxpc3QiLAogICAgICAgICAgICBvbjogewogICAgICAgICAgICAgIGNoYW5nZTogWwogICAgICAgICAgICAgICAgZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIHZhciAkJHNlbGVjdGVkVmFsID0gQXJyYXkucHJvdG90eXBlLmZpbHRlcgogICAgICAgICAgICAgICAgICAgIC5jYWxsKCRldmVudC50YXJnZXQub3B0aW9ucywgZnVuY3Rpb24obykgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG8uc2VsZWN0ZWQKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24obykgewogICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbCA9ICJfdmFsdWUiIGluIG8gPyBvLl92YWx1ZSA6IG8udmFsdWUKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWwKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICBfdm0uZmlyc3RDdXJyID0gJGV2ZW50LnRhcmdldC5tdWx0aXBsZQogICAgICAgICAgICAgICAgICAgID8gJCRzZWxlY3RlZFZhbAogICAgICAgICAgICAgICAgICAgIDogJCRzZWxlY3RlZFZhbFswXQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIF92bS5jaGFuZ2VCYXNlCiAgICAgICAgICAgICAgXQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAib3B0aW9uIiwKICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY3Vyci1saXN0LWl0ZW0iLCBhdHRyczogeyBkaXNhYmxlZDogIiIgfSB9LAogICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKF92bS5maXJzdEN1cnIpKV0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX3ZtLl9sKF92bS5jdXJyTGlzdCwgZnVuY3Rpb24oY3VycikgewogICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICJvcHRpb24iLAogICAgICAgICAgICAgICAgeyBrZXk6IGN1cnIuYWJyLCBzdGF0aWNDbGFzczogImN1cnItbGlzdC1pdGVtIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY3Vyci1saXN0LWl0ZW0tZGl2IiB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJjb3VudHJ5LWZsYWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGNvdW50cnk6IGN1cnIuZmxhZywgc2l6ZTogInNtYWxsIiB9CiAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoY3Vyci5hYnIpICsgIiAiKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9KQogICAgICAgICAgXSwKICAgICAgICAgIDIKICAgICAgICApLAogICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgIHZhbHVlOiBfdm0uZmlyc3RWYWwsCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImZpcnN0VmFsIgogICAgICAgICAgICB9CiAgICAgICAgICBdLAogICAgICAgICAgc3RhdGljQ2xhc3M6ICJ1c2VyLWlucHV0LXRleHQiLAogICAgICAgICAgYXR0cnM6IHsgdHlwZTogIm51bWJlciIgfSwKICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uZmlyc3RWYWwgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgIGNoYW5nZTogX3ZtLmNvbnZlcnRGaXJzdCwKICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF92bS5maXJzdFZhbCA9ICRldmVudC50YXJnZXQudmFsdWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIF0pLAogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY29udmVydGVyLWl0ZW0iIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoImItaWNvbi1hcnJvdy1yZXBlYXQiLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaWNvbi1zaXplIiwKICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5zd2FwQ3VyciB9CiAgICAgICAgICB9KQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnZlcnRlci1pdGVtIiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAic2VsZWN0IiwKICAgICAgICAgIHsKICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnNlY29uZEN1cnIsCiAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAic2Vjb25kQ3VyciIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY3Vyci1saXN0IiwKICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgdmFyICQkc2VsZWN0ZWRWYWwgPSBBcnJheS5wcm90b3R5cGUuZmlsdGVyCiAgICAgICAgICAgICAgICAgIC5jYWxsKCRldmVudC50YXJnZXQub3B0aW9ucywgZnVuY3Rpb24obykgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBvLnNlbGVjdGVkCiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24obykgewogICAgICAgICAgICAgICAgICAgIHZhciB2YWwgPSAiX3ZhbHVlIiBpbiBvID8gby5fdmFsdWUgOiBvLnZhbHVlCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbAogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgX3ZtLnNlY29uZEN1cnIgPSAkZXZlbnQudGFyZ2V0Lm11bHRpcGxlCiAgICAgICAgICAgICAgICAgID8gJCRzZWxlY3RlZFZhbAogICAgICAgICAgICAgICAgICA6ICQkc2VsZWN0ZWRWYWxbMF0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJvcHRpb24iLAogICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjdXJyLWxpc3QtaXRlbSIsIGF0dHJzOiB7IGRpc2FibGVkOiAiIiB9IH0sCiAgICAgICAgICAgICAgW192bS5fdihfdm0uX3MoX3ZtLnNlY29uZEN1cnIpKV0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX3ZtLl9sKF92bS5jdXJyTGlzdCwgZnVuY3Rpb24oY3VycikgewogICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICJvcHRpb24iLAogICAgICAgICAgICAgICAgeyBrZXk6IGN1cnIuYWJyLCBzdGF0aWNDbGFzczogImN1cnItbGlzdC1pdGVtIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiY291bnRyeS1mbGFnIiwgewogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGNvdW50cnk6IGN1cnIuZmxhZywgc2l6ZTogInNtYWxsIiB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfdm0uX3YoIiAiICsgX3ZtLl9zKGN1cnIuYWJyKSArICIgIikKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICB9KQogICAgICAgICAgXSwKICAgICAgICAgIDIKICAgICAgICApLAogICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgIHZhbHVlOiBfdm0uc2VjVmFsLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJzZWNWYWwiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0sCiAgICAgICAgICBzdGF0aWNDbGFzczogInVzZXItaW5wdXQtdGV4dCIsCiAgICAgICAgICBhdHRyczogeyB0eXBlOiAibnVtYmVyIiB9LAogICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5zZWNWYWwgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgIGNsaWNrOiBfdm0uY29udmVydFNlY29uZCwKICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF92bS5zZWNWYWwgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKQogICAgXSkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}